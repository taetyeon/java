<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 이곳이 root-context.xml보다 먼저 실행 되는 곳 = 이유 서블릿이라서 -->
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<!-- DispatcherServlet의 설정 파일 -->
	
	<!-- 스프링 어노테이션을 사용하겠다는 의미로 절대로 건들면 안된다. -->
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />


	<!-- 프로젝트 리소스 import 하는 코드 -->
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- "/WEB-INF/views/home.jsp" -->
	<!-- ViewResolver를 선언하는 xml부, 컨트롤러의 일반 메소드의 리턴값을 view name으로 자동으로 처리해주는 기능 -->
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 어노테이션을 자동으로 scan하는 명령, 만일 없으면 어노테이션 사용이 불가능 -->
	<!-- ex) @Controller라는 어노테이션을 찾으면 자동으로 싱글톤(Singleton)으로 객체를 생성하고 관리  -->
	<context:component-scan base-package="com.multi.basic" />
	
	<!-- 아래는 사용자의 특수 셋팅영역ㅇ -->
	
	
</beans:beans>
